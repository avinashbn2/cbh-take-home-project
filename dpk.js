const crypto = require("crypto");
exports.deterministicPartitionKey = (event) => {
  const TRIVIAL_PARTITION_KEY = "0";
  const MAX_PARTITION_KEY_LENGTH = 256;
  if(!event) {
    return TRIVIAL_PARTITION_KEY
  }
  let partitionKey =  event.partitionKey || undefined;

  if(!partitionKey) {
    const eventJSON = JSON.stringify(event);
    return createHash(eventJSON);
  }
  if (typeof partitionKey !== "string") {
      partitionKey = JSON.stringify(partitionKey);
  }

  if (partitionKey.length > MAX_PARTITION_KEY_LENGTH) {
    const hash = createHash(partitionKey);
    partitionKey = hash;
  }

  return partitionKey || TRIVIAL_PARTITION_KEY;
};

const createHash = (data) => {
  return crypto.createHash("sha3-512").update(data).digest("hex")

}

/**
 * Changed the variable candidate to partitionKey, which is more readable. 
 * Added the createHash function, which returns the hash generated by the crypto.createHash function for clarity. 
 * Removed the confusing if-else ladders by adding early returns if the value is null or undefined.
*/
